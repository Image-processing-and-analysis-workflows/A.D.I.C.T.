library(tidyverse)

########################################################################
only_L1 <- Puromycin_stress_CN32 %>% filter(protein == "L1")
only_FtsY <- Puromycin_stress_CN32 %>% filter(protein == "FtsY")
only_Ffh <- Puromycin_stress_CN32 %>% filter(protein == "Ffh")
########################################################################

only_L1_nc <- only_L1 %>% filter(condition == "0 min")
only_L1_30 <- only_L1 %>% filter(condition == "30 min")
only_L1_60 <- only_L1 %>% filter(condition == "60 min")
only_FtsY_nc <- only_FtsY %>% filter(condition == "0 min")
only_FtsY_30 <- only_FtsY %>% filter(condition == "30 min")
only_FtsY_60 <- only_FtsY %>% filter(condition == "60 min")
only_Ffh_nc <- only_Ffh %>% filter(condition == "0 min")
only_Ffh_30 <- only_Ffh %>% filter(condition == "30 min")
only_Ffh_60 <- only_Ffh %>% filter(condition == "60 min")


########################################################################

library(summarytools)
library(magrittr)

table <- Puromycin_stress_CN32 %>% select("Mean", "IntDen", "Area", "protein", "condition") %>% descr(stats = "common") %>% tb()

###################################################################################################
IntDenTable <- freq(Puromycin_stress_CN32$IntDen, order = "freq", rows = 1:5, headings = TRUE)# is usefull to eliminate duplicates, it is an extra control for data integrity checks. mean times area should not result in equal values whilst mean or area can occur more frequently due to probability reasons
MeanTable <- freq(Puromycin_stress_CN32$Mean, order = "freq", rows = 1:10, headings = TRUE)
AreaTable <- freq(Puromycin_stress_CN32$Area, order = "freq", rows = 1:5, headings = TRUE)
###################################################################################################
IntDenTable
MeanTable
AreaTable

####################################################################################################


only_nc_area <- Puromycin_stress_CN32 %>% filter(condition == "0 min")
only_30_area <- Puromycin_stress_CN32 %>% filter(condition == "30 min")
only_60_area <- Puromycin_stress_CN32 %>% filter(condition == "60 min")

only_FtsY <- Puromycin_stress_CN32 %>% filter(protein == "FtsY")
only_Ffh <- Puromycin_stress_CN32 %>% filter(protein == "Ffh")
only_L1 <- Puromycin_stress_CN32 %>% filter(protein == "L1")

########################################################################################
chisq.test(Puromycin_stress_CN32$Area,dexp(Puromycin_stress_CN32$Area))
chisq.test(Puromycin_stress_CN32$IntDen,dexp(Puromycin_stress_CN32$IntDen))
chisq.test(Puromycin_stress_CN32$Mean,dexp(Puromycin_stress_CN32$Mean))
chisq.test(Puromycin_stress_CN32$RawIntDen,dexp(Puromycin_stress_CN32$RawIntDen))
chisq.test(only_nc_area$Area,dexp(only_nc_area$Area))
chisq.test(only_nc_area$IntDen,dexp(only_nc_area$IntDen))
chisq.test(only_nc_area$Mean,dexp(only_nc_area$Mean))
chisq.test(only_nc_area$RawIntDen,dexp(only_nc_area$RawIntDen))
#######################################################################################
shapiro.test(Puromycin_stress_CN32$Area)
shapiro.test(Puromycin_stress_CN32$IntDen)
shapiro.test(Puromycin_stress_CN32$Mean)
shapiro.test(Puromycin_stress_CN32$RawIntDen)
shapiro.test(only_nc_area$Area)
shapiro.test(only_nc_area$IntDen)
shapiro.test(only_nc_area$Mean)
shapiro.test(only_nc_area$RawIntDen)
#########################################################################################

pairwise.wilcox.test(only_L1$Area, only_L1$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_L1$IntDen, only_L1$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_L1$Mean, only_L1$condition, p.adjust.method = p.adjust.methods, paired = FALSE)

pairwise.wilcox.test(only_Ffh$Area, only_Ffh$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_Ffh$IntDen, only_Ffh$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_Ffh$Mean, only_Ffh$condition, p.adjust.method = p.adjust.methods, paired = FALSE)

pairwise.wilcox.test(only_FtsY$Area, only_FtsY$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_FtsY$IntDen, only_FtsY$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
pairwise.wilcox.test(only_FtsY$Mean, only_FtsY$condition, p.adjust.method = p.adjust.methods, paired = FALSE)
############################################################################################
pairwise.wilcox.test(Puromycin_stress_CN32$Area, Puromycin_stress_CN32$condition, p.adjust.method = p.adjust.methods, paired = FALSE)


pairwise.wilcox.test(Puromycin_stress_CN32$Area, Puromycin_stress_CN32$protein, p.adjust.method = p.adjust.methods, paired = FALSE)

###########################################################################################

library(gridExtra)
library(cowplot)
library(ggthemes)

area <- Puromycin_stress_CN32 

boxplot_Area <- ggplot(area, aes(x = condition, y = Area)) +
  geom_boxplot() +  
  geom_signif(y_position=c(10, 8.15, 12.1), xmin=c("0 min", "30 min", "0 min"), xmax=c("30 min","60 min","60 min"), annotation=c("***","***","***"), tip_length=0) + 
  labs(title= paste(""), x="", y="Area (µm^2)") +
  scale_y_continuous( limits=c(0, 15)) + 
 theme_minimal()

probDens_Area <- ggplot(area, aes(x = Area, fill = condition)) +
  geom_density(alpha = 0.5) + scale_fill_colorblind() +theme_minimal() +
  theme(legend.position = c(0.82222, 0.6))

boxplot_AreaII <- ggplot(area, aes(x = protein, y = Area)) +
  geom_boxplot() +  
  geom_signif(y_position=c(10, 8.15, 12.1), xmin=c("Ffh", "FtsY", "Ffh"), xmax=c("FtsY","L1","L1"), annotation=c("n.s.","***", "***"), tip_length=0) + 
  scale_y_continuous( limits=c(0, 15)) + 
  labs(title= paste(""), x="", y="Area (µm^2)") +
  scale_fill_colorblind() +
  theme_minimal()
 
probDens_AreaII <- ggplot(area, aes(x = Area, fill = protein)) +
  geom_density(alpha = 0.5) + scale_fill_colorblind() +theme_minimal() +
  theme(legend.position = c(0.8225, 0.6))
########################################################################################
boxplot_AreaIII <- ggplot(only_nc_area, aes(x = protein, y = Area)) +
  geom_boxplot() + scale_fill_colorblind() + theme_minimal()

probDens_AreaIII <- ggplot(only_nc_area, aes(x = Area, fill = protein)) +
  geom_density(alpha = 0.6) + scale_fill_colorblind() +theme_minimal() +
  theme(legend.position = c(0.8, 0.6))
########################################################################################
p <- plot_grid(boxplot_Area, probDens_Area, boxplot_AreaII, probDens_AreaII, MGV, IntDensity, labels = "AUTO", ncol=2)
p

########################################################################################

library(dbscan)
par(mfrow=c(3,2))
L1 <- as.matrix(only_L1[,4:3])
kNNdistplot(L1, k = 5)
abline(h=30, col = "magenta", lty=2)
res <- dbscan(L1, eps = 30, minPts = 5)
hullplot(L1, res, main = "L1 clusters", xlab="Mean gray value", ylab="Area µm^2", xlim=c(0, 4000), ylim=c(0, 10), cex.axis=1)
#############################################################################
Ffh <- as.matrix(only_Ffh[,4:3])
kNNdistplot(Ffh, k = 5)
abline(h=3, col = "magenta", lty=2)
res2 <- dbscan(Ffh, eps = 3, minPts = 5)
hullplot(Ffh, res2, main = "Ffh clusters", xlab="Mean gray value", ylab="Area µm^2", xlim=c(200, 700), ylim=c(0, 10), cex.axis=1)
#############################################################################
FtsY <- as.matrix(only_FtsY[,4:3])
kNNdistplot(FtsY, k = 5)
abline(h=3, col = "magenta", lty=2)
res3 <- dbscan(FtsY, eps = 3, minPts = 5)
hullplot(FtsY, res3, main = "FtsY clusters", xlab="Mean gray value", ylab="Area µm^2", xlim=c(200, 700), ylim=c(0, 10), cex.axis=1)
##############################################################################

sessionInfo()
